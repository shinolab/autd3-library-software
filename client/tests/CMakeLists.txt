cmake_minimum_required(VERSION 3.16)

enable_testing()

add_executable(test_autd3)
target_include_directories(test_autd3 PRIVATE .)
target_link_libraries(test_autd3 gtest_main)

if(BUILD_HOLO_GAIN)
  add_subdirectory(${PROJECT_SOURCE_DIR}/tests/gain/holo)
  target_include_directories(test_autd3 PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/lib/gain/holo ${EIGEN_PATH})
  target_link_libraries(test_autd3 eigen_backend)
  if(BUILD_BLAS_BACKEND)
    target_include_directories(test_autd3 PRIVATE ${BLAS_INCLUDE_DIR})
    target_compile_definitions(test_autd3 PRIVATE TEST_BLAS_BACKEND)
    target_link_libraries(test_autd3 blas_backend)
  endif()
  if(BUILD_CUDA_BACKEND)
    target_compile_definitions(test_autd3 PRIVATE TEST_CUDA_BACKEND)
    target_link_libraries(test_autd3 cuda_backend)
  endif()
  if(BUILD_ARRAYFIRE_BACKEND)
    target_compile_definitions(test_autd3 PRIVATE TEST_ARRAYFIRE_BACKEND)
    target_link_libraries(test_autd3 arrayfire_backend)
  endif()
endif()

target_sources(test_autd3 PRIVATE test.cpp)
add_test(NAME test_autd3 COMMAND test_autd3)

include(GoogleTest)
gtest_discover_tests(test_autd3)

if(WIN32)
  set_target_properties(test_autd3 PROPERTIES FOLDER "test")
  set_target_properties(gtest PROPERTIES FOLDER "test")
  set_target_properties(gtest_main PROPERTIES FOLDER "test")
endif()
